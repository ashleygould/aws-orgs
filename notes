


__________________
TODO project:

add README file, document spec-file structure
DONE create setup.py and package project
devise workflow for using this in real service context:
  change mgmt process
  data in git/s3
  log to cloudwatch
  run from lambda/jenkins


__________________
TODO awsorgs.py:

NA have exeptions write to logger. how?
NA in logger: prepend timestamp to messages
add unit testing
NA make logger write to different url
scan_deployed_accounts: fix 'NextToken' logic.

DONE make master_id check a function. import into accounts.
DONE control order of organization tasks
DONE get rid of globals
DONE make spec-file input and report output similar
DONE create documentation (pydoc)
DONE validate/sanitize org_spec input
DONE get rid of var change_counter
DONE send messages to a text accumutator or ??  
DONE in aws-orgs.manage_accounts:
  DONE test account creation status running move_account()
DONE in specify_policy_content: test keys exist
DONE in manage_policy_attachments raise error when:
    DONE detaching default policy
    DONE attaching to an absent ou
DONE in manage_policies: dont delete a policy attached to an ou

CONSIDER:
NO divide into sub modules.  how would that look?



__________________
TODO accounts.py:
DONE import more functions from awsorgs
DONE account creation
DONE fill out validate_account_spec_file()
DONE provision default resources with cloudformation 
DONE in scan_deployed_accounts:
  DONE crosscheck fully created accounts against States=['SUCCEEDED'])['CreateAccountStatuses']

CONSIDER:
YES should account spec be separate file?
parse account names for compliance
account-spec details allowed values for name components













references:
http://www.python-course.eu/python3_tests.php



## Example: using exceptions:

def get_root_id(org_client):
    """
    Query deployed AWS Organization for its Root ID.
    """
    try:
        root_id = org_client.list_roots()['Roots'][0]['Id']
        return root_id
    except NoCredentialsError as e:
        print sys.argv[0]
        print e
        print "at function:", inspect.getframeinfo(inspect.currentframe())[2]
        print "in module:", __name__
        raise SystemExit
    except ClientError as e:
        print e
        print "at function:", inspect.getframeinfo(inspect.currentframe())[2]
        print "in module:", __name__
        raise SystemExit








Use the response contained within the exception. Here is an example:

import boto3
from botocore.exceptions import ClientError

try:
    iam = boto3.client('iam')
    user = iam.create_user(UserName='fred')
    print "Created user: %s" % user
except ClientError as e:
    if e.response['Error']['Code'] == 'EntityAlreadyExists':
        print "User already exists"
    else:
        print "Unexpected error: %s" % e
The response dict in the exception will contain the following:

- ['Error']['Code'] e.g. 'EntityAlreadyExists' or 'ValidationError'
- ['ResponseMetadata']['HTTPStatusCode'] e.g. 400
- ['ResponseMetadata']['RequestId'] e.g. 'd2b06652-88d7-11e5-99d0-812348583a35'
- ['Error']['Message'] e.g. "An error occurred (EntityAlreadyExists) ..."
- ['Error']['Type'] e.g. 'Sender'





nice little bit of code:
        response = cf_client.describe_stack_events(
            StackName=stack_kwargs['StackName']
        )
        stack_exists = [d for d in response['StackEvents']
            if d['ResourceType'] == 'AWS::CloudFormation::Stack'
            and (d['ResourceStatus'] == 'CREATE_COMPLETE'
            or d['ResourceStatus'] == 'UPDATE_COMPLETE')
        ]
        print stack_exists




ISSUES:

Sat Jul 15 10:16:02 PDT 2017
[ashely@horus aws-orgs]$ ./accounts.py -v provision -s sample_input/account-spec-test0.yaml -d sample_input/ --exec
Traceback (most recent call last):
  File "./accounts.py", line 334, in <module>
    provision_accounts(log, session, args, deployed_accounts, account_spec)
  File "./accounts.py", line 294, in provision_accounts
    cf_client, args, log, a_spec['Name'], stack_kwargs)
  File "./accounts.py", line 223, in create_stack
    cf_client.create_change_set(**stack_kwargs)
  File "/usr/lib/python2.7/site-packages/botocore/client.py", line 253, in _api_call
    return self._make_api_call(operation_name, kwargs)
  File "/usr/lib/python2.7/site-packages/botocore/client.py", line 557, in _make_api_call
    raise error_class(parsed_response, operation_name)
botocore.exceptions.ClientError: An error occurred (ValidationError) when calling the CreateChangeSet operation: Stack:arn:aws:cloudformation:us-west-2:640965621536:stack/role-central-admin/9aaf0060-6980-11e7-802b-503acbd4dc61 is in CREATE_IN_PROGRESS state and can not be updated.







_________________________________________

using pip and setup.py

[ashely@horus ~]$ pip install --user -e aws/aws-orgs/
[ashely@horus ~]$ ll .local/lib/python2.7/site-packages/
total 8
-rw-rw-r--. 1 ashely ashely  27 Jul 10 13:51 aws-orgs.egg-link
-rw-rw-r--. 1 ashely ashely 221 Jul 10 13:51 easy-install.pth

[ashely@horus ~]$ cat .local/lib/python2.7/site-packages/aws-orgs.egg-link 
/home/ashely/aws/aws-orgs

[ashely@horus ~]$ cat .local/lib/python2.7/site-packages/easy-install.pth 
import sys; sys.__plen = len(sys.path)
/home/ashely/aws/aws-orgs
import sys; new = sys.path[sys.__plen:]; del sys.path[sys.__plen:]; p = getattr(sys, '__egginsert', 0); sys.path[p:p] = new; sys.__egginsert = p + len(new)


