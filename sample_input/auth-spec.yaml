master_account_id: '640965621536'
auth_account: Managment
auth_account_id: '962936672038'
org_access_role: OrganizationAccountAccessRole
default_group: all-users
default_path: awsauth

groups:
  - Name: all-users
    Members:
      - mary
      - jethro
      - agould
      - bernice
    Policies:
      - UserSelfService
  - Name: authadmin
    Ensure: present
    Path:
    Members:
      - agould
      - authtemp
  - Name: admins
    Ensure: present
    Path:
    Members:
      - agould
      - authtemp
    Policies:
      #- AdministratorAccess
      - PowerUserAccess
  - Name: eas-users
    Ensure: present
    Path: eas
    Members:
      - mary
      - jethro
      - agould
  - Name: was-users
    Ensure: absent
    Path: was
    Members:
      #- quincey

users:
  - Name: authtemp
  - Name: egburt
  - Name: agould
    Ensure: present
    Path: sysadm
    Tags:
      Email: agould@ucop.edu
  - Name: ericthered
    #Ensure: absent
    Path: astro
    Tags:
      Email: ericthered@blee.red
  - Name: jethro
    #Ensure: absent
    #Path: astro
  - Name: mary
  - Name: quincey



delegations:
  #- RoleName: OrganizationAccountAccessRole
  #  Ensure: absent
  #  TrustingAccount: ALL
  #  TrustedGroup: admins
  - RoleName: AWSAccountsAuthAdminRole
    Ensure: absent
    TrustingAccount: ALL
    TrustedGroup: admins
  - RoleName: AWSAuthIAMFullAccess
    Ensure: present
    Description: Allow auth admins full access to IAM
    TrustingAccount: ALL
    TrustedGroup: authadmin
    RequireMFA: True
    Policies:
      - IAMFullAccess
      - AWSAuthListAccountsInOrganization
  - RoleName: AWSAuthListAccounts
    Ensure: absent
    TrustingAccount: ALL
    TrustedGroup: admins
    Policies:
      - AWSAuthListAccountsInOrganization
  - RoleName: AWSAuthFullAdmin
    Ensure: present
    Description: Allow admins full access to all services
    Path:
    TrustingAccount: ALL
    TrustedGroup: admins
    RequireMFA: True
    Policies:
      - AdministratorAccess

custom_policies:
  - PolicyName: AWSAuthListAccountsInOrganization
    Description: Allow Users to list accounts in an Organization
    Path:
    Statement:
      - Effect: Allow
        Action:
          - organizations:ListAccounts
        Resource: '*'

  - PolicyName: UserSelfService
    Description: Allow users to manage thier own account and credentials
    Statement:
      - Sid: AllowAllUsersToListAccounts
        Effect: Allow
        Action:
          - iam:ListAccountAliases
          - iam:ListUsers
          - iam:GetAccountSummary
        Resource: "*"
      - Sid: AllowIndividualUserToSeeAndManageTheirOwnAccountInformation
        Effect: Allow
        Action:
          - iam:ChangePassword
          - iam:CreateAccessKey
          - iam:CreateLoginProfile
          - iam:DeleteAccessKey
          - iam:DeleteLoginProfile
          - iam:GetAccountPasswordPolicy
          - iam:GetLoginProfile
          - iam:ListAccessKeys
          - iam:UpdateAccessKey
          - iam:UpdateLoginProfile
          - iam:ListSigningCertificates
          - iam:DeleteSigningCertificate
          - iam:UpdateSigningCertificate
          - iam:UploadSigningCertificate
          - iam:ListSSHPublicKeys
          - iam:GetSSHPublicKey
          - iam:DeleteSSHPublicKey
          - iam:UpdateSSHPublicKey
          - iam:UploadSSHPublicKey
        Resource: arn:aws:iam::*:user/*/${aws:username}
      - Sid: AllowIndividualUserToListTheirOwnMFA
        Effect: Allow
        Action:
          - iam:ListVirtualMFADevices
          - iam:ListMFADevices
        Resource:
          - arn:aws:iam::*:mfa/*
          - arn:aws:iam::*:user/*/${aws:username}
      - Sid: AllowIndividualUserToManageTheirOwnMFA
        Effect: Allow
        Action:
          - iam:CreateVirtualMFADevice
          - iam:DeactivateMFADevice
          - iam:DeleteVirtualMFADevice
          - iam:RequestSmsMfaRegistration
          - iam:FinalizeSmsMfaRegistration
          - iam:EnableMFADevice
          - iam:ResyncMFADevice
        Resource:
          - arn:aws:iam::*:mfa/${aws:username}
          - arn:aws:iam::*:user/*/${aws:username}
      - Sid: BlockAnyAccessOtherThanAboveUnlessSignedInWithMFA
        Effect: Deny
        NotAction:
          - iam:*
        Resource: "*"
        Condition:
          BoolIfExists:
            aws:MultiFactorAuthPresent: 'false'

