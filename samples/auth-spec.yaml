# AWS Auth Specification

# AWS account Id for the Organization master account.  This must be in quotes.
master_account_id: '640965621536'

# AWS account Id for the Central Auth account.  This must be in quotes.
auth_account_id: '962936672038'

# Role to use when managing resources in account.  This must not itself
# be a managed delegation role.
org_access_role: OrganizationAccountAccessRole

# If defined, this string is prepended to all IAM resource 'path' attributes.
default_path: awsauth


users:
  - Name: ashely
    Email: agould@example.com
    Team: systems
    Path: orgadmin
  - Name: eric
    Email: eric@example.com
    Team: systems
  - Name: dave
    Email: dave@example.com
    Team: systems
  - Name: jethro
    Email: eric@example.com
    Team: blee
    Path: dev
  - Name: mary
    Email: eric@example.com
    Team: gorp
    Path: dev
  - Name: quincey
    Ensure: absent

groups:
  - Name: all-users
    Members: ALL
    Policies:
      - UserSelfService
  - Name: admins
    Ensure: present
    Members:
      - ashely
      - dave
      - eric
    Policies:
      - PowerUserAccess
  - Name: orgadmins
    Members:
      - ashely
  - Name: authadmins
    Members:
      - dave
      - eric
  - Name: blee-users
    Path: blee
    Members:
      - jethro
  - Name: gorp-users
    Path: gorp
    Members:
      - mary
  - Name: lurkers
    Ensure: absent
      #- quincey


delegations:
  - RoleName: LurkerRole
    Ensure: absent
    TrustingAccount: ALL
    TrustedGroup: lurkers
  - RoleName: AuthAdminRole
    Ensure: present
    Description: Allow auth admins full access to IAM
    TrustingAccount: ALL
    TrustedGroup: authadmin
    RequireMFA: True
    Policies:
      - IAMFullAccess
      - ListAccountsInOrganization
  - RoleName: AccountAdminitratorRole
    Ensure: present
    Description: Allow admins full access to all services
    TrustingAccount: ALL
    TrustedGroup: admins
    RequireMFA: True
    Policies:
      - AdministratorAccess
  - RoleName: BleeAccessRole
    Description: Allow developers access to blee account
    TrustingAccount:
      - blee-poc
      - blee-prod
    TrustedGroup: blee-users
    RequireMFA: True
    Policies:
      - PowerUserAccess
  - RoleName: GorpAccessRole
    Description: Allow developers access to gorp account
    TrustingAccount:
      - gorp-poc
      - gorp-prod
    TrustedGroup: gorp-users
    RequireMFA: True
    Policies:
      - PowerUserAccess



custom_policies:
  - PolicyName: ListAccountsInOrganization
    Description: Allow Users to list accounts in an Organization
    Statement:
      - Effect: Allow
        Action:
          - organizations:ListAccounts
        Resource: '*'

  - PolicyName: UserSelfService
    Description: Allow users to manage thier own account and credentials
    Statement:
      - Sid: AllowAllUsersToListAccounts
        Effect: Allow
        Action:
          - iam:ListAccountAliases
          - iam:ListUsers
          - iam:GetAccountSummary
        Resource: "*"
      - Sid: AllowIndividualUserToSeeAndManageTheirOwnAccountInformation
        Effect: Allow
        Action:
          - iam:ChangePassword
          - iam:CreateAccessKey
          - iam:CreateLoginProfile
          - iam:DeleteAccessKey
          - iam:DeleteLoginProfile
          - iam:GetAccountPasswordPolicy
          - iam:GetLoginProfile
          - iam:ListAccessKeys
          - iam:UpdateAccessKey
          - iam:UpdateLoginProfile
          - iam:ListSigningCertificates
          - iam:DeleteSigningCertificate
          - iam:UpdateSigningCertificate
          - iam:UploadSigningCertificate
          - iam:ListSSHPublicKeys
          - iam:GetSSHPublicKey
          - iam:DeleteSSHPublicKey
          - iam:UpdateSSHPublicKey
          - iam:UploadSSHPublicKey
        Resource: arn:aws:iam::*:user/*/${aws:username}
      - Sid: AllowIndividualUserToListTheirOwnMFA
        Effect: Allow
        Action:
          - iam:ListVirtualMFADevices
          - iam:ListMFADevices
        Resource:
          - arn:aws:iam::*:mfa/*
          - arn:aws:iam::*:user/*/${aws:username}
      - Sid: AllowIndividualUserToManageTheirOwnMFA
        Effect: Allow
        Action:
          - iam:CreateVirtualMFADevice
          - iam:DeactivateMFADevice
          - iam:DeleteVirtualMFADevice
          - iam:RequestSmsMfaRegistration
          - iam:FinalizeSmsMfaRegistration
          - iam:EnableMFADevice
          - iam:ResyncMFADevice
        Resource:
          - arn:aws:iam::*:mfa/${aws:username}
          - arn:aws:iam::*:user/*/${aws:username}
      - Sid: BlockAnyAccessOtherThanAboveUnlessSignedInWithMFA
        Effect: Deny
        NotAction:
          - iam:*
        Resource: "*"
        Condition:
          BoolIfExists:
            aws:MultiFactorAuthPresent: 'false'

